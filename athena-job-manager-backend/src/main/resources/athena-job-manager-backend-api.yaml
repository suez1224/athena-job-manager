################################################################################
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
# limitations under the License.
################################################################################

swagger: '2.0'
info:
  description: Athena Job Manager REST API
  version: '0.0.1'
  title: Athena Job Manager REST API
  contact:
    email: athena-dev@uber.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
basePath: /ws/v1
host: localhost
tags:
  - name: jobs
    description: Operations on applications.
  - name: resources
    description: Operations on resources like Jars, static configs, checkpoints, etc.
paths:
  '/jobs':
    get:
      tags:
        - jobs
      operationId: listJob
      summary: List all jobs
      parameters:
        - name: serviceName
          in: path
          required: true
          description: Name of the service requesting its managed list of jobs.
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/JobDefinition'
  '/jobs/deploy':
    post:
      tags:
        - jobs
      operationId: deployJob
      summary: Obtain a new deployment UUID, and set the job desire state to RUNNING to trigger deployment.
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DeploymentDefinition'
  '/jobs/{jobUUID}':
    get:
      tags:
        - jobs
      operationId: getJob
      summary: Get the detail information about a job
      parameters:
        - name: jobUUID
          in: path
          required: true
          description: UUID of the job
          type: string
          format: uuid
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/JobDefinition'
    delete:
      tags:
        - jobs
      operationId: terminateJob
      summary: Terminate a running deployment of a job by setting desire state to CANCELLED.
      parameters:
        - name: jobUUID
          in: path
          required: true
          description: UUID of the job
          type: string
          format: uuid
      responses:
        '200':
          description: successful operation
  '/resources':
    get:
      tags:
      - resources
      operationId: listResources
      summary: List all resources associated with a specific job deployment
      parameters:
      - name: jobUUID
        in: path
        required: true
        description: UUID of the job.
        type: string
        format: uuid
      produces:
      - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/ResourceDefinition'
    post:
      tags:
      - resources
      operationId: createResource
      summary: Create/Deploy a resource and returns a resource UUID
      produces:
      - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              resource-uuid:
                type: string
                description: The allocated resource UUID

definitions:
  JobDefinition:
    type: object
    properties:
      uuid:
        type: string
        format: uuid
        description: the job uuid
      job-type:
        schema:
          $ref: '#/definitions/JobType'
      desire-state:
        schema:
          $ref: '#/definitions/JobState'
      metadata:
        type: object
        description: metadata properties for the job.
        properties:
          service-name:
            type: string
            desription: the service name associate with the job
      payload:
        type: object
        description: payload of the job itself that formats based on the job type.
  DeploymentDefinition:
    type: object
    properties:
      uuid:
        type: string
        format: uuid
        description: the deployment uuid
      job-uuid:
        type: string
        format: uuid
        description: the deployment uuid
      deployment-status:
        schema:
          $ref: '#/definitions/DeploymentStatus'
      payload:
        type: object
        description: payload of the deployment returned by a deployment manager.
  ResourceDefinition:
    type: object
    properties:
      uuid:
        type: string
        format: uuid
        descrdiption: the resource uuid
      resource-type:
        schema:
          $ref: '#/definitions/ResourceType'
      payload:
        type: object
        description: payload of the resource itself that formats based on the resource type.
  ResourceType:
    type: string
    enum:
      - CHECKPOINT
      - SAVEPOINT
      - PACKAGE
      - CONFIG
      - OTHER
  JobType:
    type: string
    enum:
      - ATHENA_FAAS
      - ATHENA_SQL
      - ATHENA_FLUX
      - OTHER
  JobState:
    type: object
    properties:
      state:
        type: string
        description: Desire state of a specific job.
        enum:
        - RUNNING
        - CANCELLED
        - SUSPENDED
  DeploymentStatus:
    type: object
    properties:
      state:
        type: string
        description: Status of the application deployed in a region/cluster.
        enum:
          - NEW
          - NEW_SAVING
          - SUBMITTED
          - ACCEPTED
          - RUNNING
          - FINISHED
          - FAILED
          - KILLED

